// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ve.gob.iribarren.tube.model;

import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import ve.gob.iribarren.tube.model.YoutubeCanal;
import ve.gob.iribarren.tube.model.YoutubeCanalDataOnDemand;
import ve.gob.iribarren.tube.repository.YoutubeCanalRepository;

privileged aspect YoutubeCanalDataOnDemand_Roo_DataOnDemand {
    
    declare @type: YoutubeCanalDataOnDemand: @Component;
    
    private Random YoutubeCanalDataOnDemand.rnd = new SecureRandom();
    
    private List<YoutubeCanal> YoutubeCanalDataOnDemand.data;
    
    @Autowired
    YoutubeCanalRepository YoutubeCanalDataOnDemand.youtubeCanalRepository;
    
    public YoutubeCanal YoutubeCanalDataOnDemand.getNewTransientYoutubeCanal(int index) {
        YoutubeCanal obj = new YoutubeCanal();
        setName(obj, index);
        return obj;
    }
    
    public void YoutubeCanalDataOnDemand.setName(YoutubeCanal obj, int index) {
        String name = "name_" + index;
        if (name.length() > 255) {
            name = new Random().nextInt(10) + name.substring(1, 255);
        }
        obj.setName(name);
    }
    
    public YoutubeCanal YoutubeCanalDataOnDemand.getSpecificYoutubeCanal(int index) {
        init();
        if (index < 0) {
            index = 0;
        }
        if (index > (data.size() - 1)) {
            index = data.size() - 1;
        }
        YoutubeCanal obj = data.get(index);
        Long id = obj.getId();
        return youtubeCanalRepository.findOne(id);
    }
    
    public YoutubeCanal YoutubeCanalDataOnDemand.getRandomYoutubeCanal() {
        init();
        YoutubeCanal obj = data.get(rnd.nextInt(data.size()));
        Long id = obj.getId();
        return youtubeCanalRepository.findOne(id);
    }
    
    public boolean YoutubeCanalDataOnDemand.modifyYoutubeCanal(YoutubeCanal obj) {
        return false;
    }
    
    public void YoutubeCanalDataOnDemand.init() {
        int from = 0;
        int to = 10;
        data = youtubeCanalRepository.findAll(new org.springframework.data.domain.PageRequest(from / to, to)).getContent();
        if (data == null) {
            throw new IllegalStateException("Find entries implementation for 'YoutubeCanal' illegally returned null");
        }
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<YoutubeCanal>();
        for (int i = 0; i < 10; i++) {
            YoutubeCanal obj = getNewTransientYoutubeCanal(i);
            try {
                youtubeCanalRepository.save(obj);
            } catch (final ConstraintViolationException e) {
                final StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> iter = e.getConstraintViolations().iterator(); iter.hasNext();) {
                    final ConstraintViolation<?> cv = iter.next();
                    msg.append("[").append(cv.getRootBean().getClass().getName()).append(".").append(cv.getPropertyPath()).append(": ").append(cv.getMessage()).append(" (invalid value = ").append(cv.getInvalidValue()).append(")").append("]");
                }
                throw new IllegalStateException(msg.toString(), e);
            }
            youtubeCanalRepository.flush();
            data.add(obj);
        }
    }
    
}
